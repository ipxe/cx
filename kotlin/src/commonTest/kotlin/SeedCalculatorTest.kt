package org.ipxe.cx

import kotlin.test.*

@kotlin.ExperimentalUnsignedTypes
class SeedCalculatorTest {

    val keyA = publicKeyOf(PublicKeySpec(ubyteArrayOf(
        0x30U, 0x82U, 0x01U, 0x22U, 0x30U, 0x0dU, 0x06U, 0x09U,
        0x2aU, 0x86U, 0x48U, 0x86U, 0xf7U, 0x0dU, 0x01U, 0x01U,
        0x01U, 0x05U, 0x00U, 0x03U, 0x82U, 0x01U, 0x0fU, 0x00U,
        0x30U, 0x82U, 0x01U, 0x0aU, 0x02U, 0x82U, 0x01U, 0x01U,
        0x00U, 0xabU, 0xefU, 0xafU, 0xe2U, 0x0fU, 0x5bU, 0xc1U,
        0xe5U, 0x81U, 0xfbU, 0x03U, 0x8eU, 0x08U, 0x81U, 0x0fU,
        0x87U, 0x63U, 0x91U, 0x5cU, 0x13U, 0x9dU, 0x18U, 0x35U,
        0xf2U, 0x34U, 0xebU, 0x87U, 0xa5U, 0x83U, 0x9aU, 0x6eU,
        0x06U, 0x9bU, 0x84U, 0x94U, 0x45U, 0x6cU, 0xb3U, 0x73U,
        0x11U, 0x42U, 0xe1U, 0x84U, 0x30U, 0xf6U, 0x7eU, 0xa4U,
        0x77U, 0x18U, 0x49U, 0xdeU, 0xebU, 0x02U, 0x7cU, 0xbcU,
        0x30U, 0x74U, 0x7eU, 0x3eU, 0x1fU, 0xa0U, 0xa8U, 0x91U,
        0x1cU, 0x7cU, 0xeeU, 0x43U, 0xbaU, 0x49U, 0x5bU, 0xe1U,
        0xf9U, 0x01U, 0x59U, 0x3cU, 0xb4U, 0x61U, 0x8fU, 0xbdU,
        0x87U, 0x64U, 0x55U, 0xeaU, 0x4eU, 0x79U, 0xd8U, 0x14U,
        0x70U, 0x06U, 0x36U, 0x9cU, 0xd2U, 0x91U, 0x9aU, 0xa6U,
        0x6bU, 0x77U, 0x3dU, 0xe0U, 0x50U, 0xc2U, 0xf3U, 0x20U,
        0x91U, 0x9dU, 0x81U, 0xb7U, 0xccU, 0xdaU, 0xf4U, 0x5bU,
        0xa9U, 0x08U, 0x77U, 0xa7U, 0xa2U, 0x72U, 0x34U, 0x32U,
        0x52U, 0x3aU, 0xf5U, 0xb7U, 0x54U, 0x87U, 0x66U, 0x75U,
        0x5cU, 0xfeU, 0x55U, 0xceU, 0x2fU, 0x22U, 0xaeU, 0x5eU,
        0x2fU, 0x9bU, 0x2bU, 0x02U, 0x71U, 0xe1U, 0x49U, 0x36U,
        0x13U, 0x46U, 0x09U, 0xd4U, 0x43U, 0x3eU, 0xf6U, 0x95U,
        0xcfU, 0xecU, 0x64U, 0x96U, 0x4eU, 0x7cU, 0xbbU, 0xa9U,
        0xa5U, 0x3dU, 0x99U, 0x57U, 0x5bU, 0xc0U, 0xedU, 0xcaU,
        0x9bU, 0xfdU, 0x5cU, 0xd5U, 0xa5U, 0xc4U, 0x58U, 0x96U,
        0x3dU, 0x00U, 0xdcU, 0xb4U, 0x17U, 0xd1U, 0x94U, 0xfdU,
        0x70U, 0x1fU, 0xf9U, 0xd2U, 0xb6U, 0x53U, 0xb0U, 0xf3U,
        0xa0U, 0xadU, 0x04U, 0x5fU, 0x77U, 0x12U, 0x6bU, 0x75U,
        0x14U, 0x2fU, 0xe2U, 0x82U, 0x07U, 0x35U, 0x5aU, 0x6eU,
        0x95U, 0x97U, 0xdcU, 0xa7U, 0x04U, 0x66U, 0x92U, 0x12U,
        0x36U, 0xb3U, 0x88U, 0x14U, 0xa2U, 0x0fU, 0x51U, 0xefU,
        0x64U, 0xc4U, 0x90U, 0x95U, 0xa9U, 0xb9U, 0xd0U, 0xe9U,
        0xc1U, 0x06U, 0xf4U, 0x1cU, 0x4aU, 0xb6U, 0xb8U, 0xc2U,
        0x5bU, 0x7eU, 0x73U, 0xe7U, 0xacU, 0x52U, 0xceU, 0x1eU,
        0xbfU, 0xd9U, 0x8cU, 0xadU, 0x4aU, 0x54U, 0xa3U, 0xe6U,
        0xf5U, 0x02U, 0x03U, 0x01U, 0x00U, 0x01U
    ).asByteArray()))

    val keyB = publicKeyOf(PublicKeySpec(ubyteArrayOf(
        0x30U, 0x82U, 0x01U, 0x22U, 0x30U, 0x0dU, 0x06U, 0x09U,
        0x2aU, 0x86U, 0x48U, 0x86U, 0xf7U, 0x0dU, 0x01U, 0x01U,
        0x01U, 0x05U, 0x00U, 0x03U, 0x82U, 0x01U, 0x0fU, 0x00U,
        0x30U, 0x82U, 0x01U, 0x0aU, 0x02U, 0x82U, 0x01U, 0x01U,
        0x00U, 0xc1U, 0xf8U, 0x08U, 0x2aU, 0xa9U, 0x96U, 0x90U,
        0xa6U, 0x44U, 0xefU, 0x01U, 0x39U, 0x47U, 0xb9U, 0x8fU,
        0xe4U, 0xb4U, 0xd9U, 0xb6U, 0xb5U, 0xacU, 0x7dU, 0x4dU,
        0xaaU, 0x48U, 0x04U, 0xa0U, 0x6bU, 0xc4U, 0xeeU, 0xb4U,
        0x71U, 0xeaU, 0x7eU, 0xf9U, 0xdcU, 0x00U, 0xadU, 0xfaU,
        0xf9U, 0x91U, 0x47U, 0x2dU, 0x8fU, 0x3fU, 0x50U, 0x9bU,
        0x63U, 0x6eU, 0x43U, 0xf7U, 0xabU, 0x4bU, 0x4fU, 0x98U,
        0x84U, 0x66U, 0x25U, 0xf7U, 0x8cU, 0xd9U, 0x02U, 0xccU,
        0xddU, 0x6cU, 0x5dU, 0x33U, 0x9fU, 0x80U, 0x5aU, 0x6eU,
        0x74U, 0xddU, 0x34U, 0x0eU, 0xadU, 0x87U, 0x56U, 0x3cU,
        0x8fU, 0xf3U, 0xdaU, 0xc4U, 0xc1U, 0x59U, 0xeeU, 0x61U,
        0x4fU, 0xffU, 0x86U, 0xd7U, 0xd5U, 0x69U, 0xa3U, 0x9eU,
        0x8aU, 0x1aU, 0xc0U, 0xc1U, 0xd9U, 0x5aU, 0xecU, 0xe0U,
        0x13U, 0x9aU, 0x17U, 0xb9U, 0x9aU, 0xc6U, 0x16U, 0x3eU,
        0x22U, 0xb8U, 0xccU, 0xcdU, 0x95U, 0x5fU, 0xb0U, 0x41U,
        0x23U, 0x6dU, 0xdfU, 0x04U, 0x7eU, 0xccU, 0x89U, 0xd8U,
        0xd6U, 0x1eU, 0x5dU, 0x94U, 0xfaU, 0x51U, 0x33U, 0xacU,
        0xcfU, 0xaaU, 0xd9U, 0xe7U, 0x1cU, 0xdfU, 0x1aU, 0x4bU,
        0xfcU, 0x3bU, 0x70U, 0x14U, 0xffU, 0x31U, 0x46U, 0x66U,
        0x32U, 0x24U, 0xf3U, 0x03U, 0x2cU, 0x52U, 0xe0U, 0xe7U,
        0xb1U, 0x3cU, 0x5aU, 0xcaU, 0xfeU, 0x4aU, 0x7dU, 0x87U,
        0x19U, 0xd0U, 0x4dU, 0x2bU, 0xf6U, 0xc9U, 0xe1U, 0xacU,
        0x38U, 0x79U, 0xd6U, 0xe9U, 0x63U, 0xc5U, 0x90U, 0x9eU,
        0x08U, 0xddU, 0x6aU, 0xfbU, 0xcdU, 0x91U, 0xefU, 0xf1U,
        0xa7U, 0x05U, 0x1eU, 0xf8U, 0x10U, 0xa4U, 0xfcU, 0x08U,
        0xa3U, 0xc4U, 0xadU, 0x7bU, 0x01U, 0x9aU, 0x73U, 0xbbU,
        0x71U, 0x85U, 0x91U, 0xbdU, 0xa5U, 0xc8U, 0x69U, 0x03U,
        0x04U, 0x86U, 0x8bU, 0xbaU, 0x3aU, 0xe9U, 0x62U, 0xdfU,
        0x46U, 0x23U, 0x35U, 0x93U, 0xefU, 0x6eU, 0x13U, 0x31U,
        0x45U, 0xc9U, 0x38U, 0xfaU, 0x54U, 0x85U, 0xf4U, 0xa3U,
        0x76U, 0xd3U, 0xd2U, 0xffU, 0xd6U, 0x77U, 0xefU, 0x97U,
        0x0dU, 0xccU, 0x08U, 0x01U, 0x9fU, 0x73U, 0xaeU, 0xb6U,
        0x8dU, 0x02U, 0x03U, 0x01U, 0x00U, 0x01U
    ).asByteArray()))

    @Test fun exceptionTest() {
        assertFailsWith<IncorrectSeedLengthException> {
            SeedCalculator(GeneratorType.Aes128Ctr2048, byteArrayOf(1), keyA)
        }
    }

    fun specTest(
        type: GeneratorType,
        preseed: UByteArray,
        key: PublicKey,
        seed: UByteArray
    ) {
        val seedcalc = SeedCalculator(type, preseed.asByteArray(), key)
        assertHexEquals(seed.asByteArray(), seedcalc.seed)
    }

    @Test fun specType1Test1() = specTest(
        GeneratorType.Aes128Ctr2048, ubyteArrayOf(
            0x00U, 0x01U, 0x02U, 0x03U, 0x04U, 0x05U, 0x06U, 0x07U,
            0x08U, 0x09U, 0x0aU, 0x0bU, 0x0cU, 0x0dU, 0x0eU, 0x0fU,
            0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U, 0x17U
        ), keyA, ubyteArrayOf(
            0xc9U, 0xf7U, 0xfdU, 0xe4U, 0x50U, 0x97U, 0x7cU, 0x5dU,
            0x7dU, 0xaaU, 0xcbU, 0x2dU, 0x93U, 0x7cU, 0x5aU, 0x48U,
            0x20U, 0xebU, 0xcaU, 0xaaU, 0x7eU, 0xdbU, 0xcdU, 0xacU
        )
    )

    @Test fun specType1Test2() = specTest(
        GeneratorType.Aes128Ctr2048, ubyteArrayOf(
            0x00U, 0x01U, 0x02U, 0x03U, 0x04U, 0x05U, 0x06U, 0x07U,
            0x08U, 0x09U, 0x0aU, 0x0bU, 0x0cU, 0x0dU, 0x0eU, 0x0fU,
            0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U, 0x17U
        ), keyB, ubyteArrayOf(
            0x65U, 0x55U, 0xa6U, 0xe9U, 0xe4U, 0x61U, 0x17U, 0xa0U,
            0x8dU, 0xe1U, 0x1eU, 0x06U, 0x80U, 0x13U, 0x7fU, 0x0bU,
            0x66U, 0x4aU, 0x77U, 0x6cU, 0x0cU, 0x68U, 0x95U, 0xd8U
        )
    )

    @Test fun specType1Test3() = specTest(
        GeneratorType.Aes128Ctr2048, ubyteArrayOf(
            0x33U, 0x13U, 0x7eU, 0x02U, 0x24U, 0xf0U, 0xacU, 0x03U,
            0x1fU, 0xf1U, 0x78U, 0x76U, 0xf9U, 0xfbU, 0xfcU, 0xdcU,
            0x20U, 0x8fU, 0xe5U, 0x20U, 0x11U, 0x9dU, 0x23U, 0xb1U
        ), keyB, ubyteArrayOf(
            0x20U, 0xc4U, 0x4dU, 0xe4U, 0x64U, 0x16U, 0x04U, 0xc8U,
            0x5cU, 0xf7U, 0xcfU, 0x29U, 0x27U, 0xf8U, 0x70U, 0xc8U,
            0xe9U, 0x86U, 0x6aU, 0x31U, 0x17U, 0x4aU, 0xd5U, 0x7fU
        )
    )

    @Test fun specType2Test1() = specTest(
        GeneratorType.Aes256Ctr2048, ubyteArrayOf(
            0x00U, 0x01U, 0x02U, 0x03U, 0x04U, 0x05U, 0x06U, 0x07U,
            0x08U, 0x09U, 0x0aU, 0x0bU, 0x0cU, 0x0dU, 0x0eU, 0x0fU,
            0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U, 0x17U,
            0x18U, 0x19U, 0x1aU, 0x1bU, 0x1cU, 0x1dU, 0x1eU, 0x1fU,
            0x20U, 0x21U, 0x22U, 0x23U, 0x24U, 0x25U, 0x26U, 0x27U,
            0x28U, 0x29U, 0x2aU, 0x2bU, 0x2cU, 0x2dU, 0x2eU, 0x2fU
        ), keyA, ubyteArrayOf(
            0x58U, 0xf4U, 0x82U, 0x5bU, 0x6bU, 0xccU, 0x59U, 0xc2U,
            0x69U, 0x2bU, 0xf1U, 0x2bU, 0x19U, 0x43U, 0x47U, 0xf8U,
            0xd1U, 0x47U, 0x6cU, 0x25U, 0xf2U, 0xbaU, 0x52U, 0x6fU,
            0xe5U, 0x19U, 0x22U, 0xfdU, 0xc2U, 0x8fU, 0xbdU, 0xacU,
            0xc8U, 0x24U, 0x3eU, 0xe9U, 0x4eU, 0x44U, 0x3eU, 0x1aU,
            0xc6U, 0x8fU, 0x6cU, 0x3cU, 0x38U, 0xd3U, 0x16U, 0xc8U
        )
    )

    @Test fun specType2Test2() = specTest(
        GeneratorType.Aes256Ctr2048, ubyteArrayOf(
            0x00U, 0x01U, 0x02U, 0x03U, 0x04U, 0x05U, 0x06U, 0x07U,
            0x08U, 0x09U, 0x0aU, 0x0bU, 0x0cU, 0x0dU, 0x0eU, 0x0fU,
            0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U, 0x17U,
            0x18U, 0x19U, 0x1aU, 0x1bU, 0x1cU, 0x1dU, 0x1eU, 0x1fU,
            0x20U, 0x21U, 0x22U, 0x23U, 0x24U, 0x25U, 0x26U, 0x27U,
            0x28U, 0x29U, 0x2aU, 0x2bU, 0x2cU, 0x2dU, 0x2eU, 0x2fU
        ), keyB, ubyteArrayOf(
            0x18U, 0x60U, 0xc1U, 0xb5U, 0x77U, 0x3fU, 0x62U, 0x57U,
            0x72U, 0x7eU, 0x7cU, 0x68U, 0x1fU, 0x24U, 0x5dU, 0xc3U,
            0x4fU, 0x55U, 0xe4U, 0x01U, 0x6eU, 0x55U, 0x80U, 0xa9U,
            0x8dU, 0xaeU, 0x95U, 0x97U, 0x9bU, 0x07U, 0x18U, 0x13U,
            0xdfU, 0xa2U, 0x1cU, 0x18U, 0x40U, 0xf7U, 0x8bU, 0xe8U,
            0x76U, 0xdaU, 0x26U, 0x0fU, 0x12U, 0x91U, 0x66U, 0xc3U
        )
    )

    @Test fun specType2Test3() = specTest(
        GeneratorType.Aes256Ctr2048, ubyteArrayOf(
            0x5bU, 0xadU, 0x27U, 0xe1U, 0x63U, 0x64U, 0x7eU, 0x8cU,
            0x63U, 0x1aU, 0xe7U, 0xc6U, 0xd2U, 0x36U, 0xcfU, 0xecU,
            0x43U, 0x92U, 0xc7U, 0xb0U, 0x56U, 0x26U, 0x90U, 0x5fU,
            0x72U, 0xf7U, 0xd2U, 0xa5U, 0xa0U, 0xaaU, 0x65U, 0xcdU,
            0x78U, 0xacU, 0xc5U, 0x36U, 0xb7U, 0x05U, 0xe6U, 0xebU,
            0x92U, 0xdfU, 0x4bU, 0xcbU, 0xf3U, 0xaaU, 0xccU, 0x4dU
        ), keyB, ubyteArrayOf(
            0x20U, 0x95U, 0xeeU, 0x61U, 0x27U, 0xa0U, 0x36U, 0x90U,
            0xd7U, 0xeeU, 0xabU, 0x1bU, 0x4cU, 0xf0U, 0xc0U, 0x91U,
            0xcfU, 0x39U, 0x31U, 0x34U, 0x7cU, 0xd2U, 0x82U, 0xccU,
            0xa5U, 0xf6U, 0xbfU, 0x2fU, 0x7aU, 0x45U, 0xa1U, 0xd8U,
            0x4fU, 0x99U, 0xebU, 0xb8U, 0x24U, 0x3bU, 0x73U, 0x6aU,
            0x07U, 0x42U, 0x8bU, 0x22U, 0x0dU, 0x7eU, 0x46U, 0xb1U
        )
    )
}
